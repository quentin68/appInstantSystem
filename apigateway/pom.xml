<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
      <groupId>com.quentinbauer.intantSystemApp.root</groupId>
      <artifactId>parkingAppMicroServices</artifactId>
      <version>0.0.1-SNAPSHOT</version>
   </parent>
   <groupId>com.quentinbauer.parkingapp</groupId>
   <artifactId>apigateway</artifactId>
   <packaging>jar</packaging>
   <description>apigateway with spring cloud</description>
   <properties>
      <docker.image.exposed.port>8081</docker.image.exposed.port>
      <docker.image.dockerfile.dir>${basedir}/../docker</docker.image.dockerfile.dir>
      <wro4j.version>1.8.0</wro4j.version>
      <version>2.2.10.RELEASE</version>
   </properties>
   <dependencies>
      <!-- Spring Boot -->
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-devtools</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-configuration-processor</artifactId>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-actuator</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-test</artifactId>
         <scope>test</scope>
      </dependency>
      <!-- Spring Cloud -->
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
         <version>2.2.10.RELEASE</version>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-config</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-sleuth</artifactId>
      </dependency>
      <dependency>
         <groupId>org.springframework.cloud</groupId>
         <artifactId>spring-cloud-starter-gateway</artifactId>
      </dependency>
      <!-- Third parties -->
      <dependency>
         <groupId>org.springdoc</groupId>
         <artifactId>springdoc-openapi-webflux-core</artifactId>
         <version>1.5.13</version>
      </dependency>
      <dependency>
         <groupId>org.springdoc</groupId>
         <artifactId>springdoc-openapi-webflux-ui</artifactId>
         <version>1.5.13</version>
      </dependency>
      <dependency>
         <groupId>org.jolokia</groupId>
         <artifactId>jolokia-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.projectlombok</groupId>
         <artifactId>lombok</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>io.micrometer</groupId>
         <artifactId>micrometer-registry-prometheus</artifactId>
      </dependency>
      <dependency>
         <groupId>io.github.resilience4j</groupId>
         <artifactId>resilience4j-micrometer</artifactId>
      </dependency>
      <!-- Testing -->
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-api</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-engine</artifactId>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.squareup.okhttp3</groupId>
         <artifactId>mockwebserver</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>
   <build>
      <plugins>
         <plugin>
            <groupId>ro.isdc.wro4j</groupId>
            <artifactId>wro4j-maven-plugin</artifactId>
            <version>${wro4j.version}</version>
            <configuration>
               <wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
               <cssDestinationFolder>${project.build.directory}/classes/static/css</cssDestinationFolder>
               <wroFile>${basedir}/src/main/wro/wro.xml</wroFile>
               <extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
               <contextFolder>${basedir}/src/main/less</contextFolder>
            </configuration>
            <dependencies>
               <!-- Some tweak for wro4j 1.8 compatibility with Java 9+ -->
               <!-- See https://github.com/wro4j/wro4j/issues/1039 -->
               <dependency>
                  <groupId>org.mockito</groupId>
                  <artifactId>mockito-core</artifactId>
                  <version>${mockito.version}</version>
               </dependency>
            </dependencies>
         </plugin>
      </plugins>
   </build>
   <profiles>
      <profile>
         <id>buildDocker</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>com.spotify</groupId>
                  <artifactId>docker-maven-plugin</artifactId>
                  <version>${docker.plugin.version}</version>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
   <repositories>
      <repository>
         <id>netflix-candidates</id>
         <name>Netflix Candidates</name>
         <url>https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates</url>
         <snapshots>
            <enabled>false</enabled>
         </snapshots>
      </repository>
      <repository>
         <id>spring-milestones</id>
         <name>Spring Milestones</name>
         <url>https://repo.spring.io/milestone</url>
         <snapshots>
            <enabled>false</enabled>
         </snapshots>
      </repository>
   </repositories>
</project>